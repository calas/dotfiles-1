# shell aliases

OS="$(uname)"
if [ "$OS" = "FreeBSD" ]; then
  alias ls='ls -h -F -G'
  alias du='du -h'
  alias ducks='du -cks * | sort -rn | head -15'
elif [ "$OS" = "Linux" ]; then
  alias du='du --human-readable'
  alias ls='ls --classify --tabsize=0 --literal --color=auto --show-control-chars --human-readable --group-directories-first'
  alias locate='locate -i'
  alias dirtree="ls -R | grep \":$\" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'"
  alias info='info --vi-keys'
elif [ "$OS" = "SunOS" ]; then
  [ $DISPLAY != "x" ] && alias vim='TERM=xtermc vim'
  alias ls='/usr/gnu/bin/ls --color=auto'
fi

alias c='clear'

# Grep aliases
grep --exclude-dir 2> /dev/null
if [ $? -eq 0 ]; then
  alias grepc='grep --color=always --exclude-dir=.svn --exclude=\*.pyc --exclude-dir=.hg --exclude-dir=.bzr --exclude-dir=.git'
  alias grep='grep --color=auto --exclude-dir=.svn --exclude=\*.pyc --exclude-dir=.hg --exclude-dir=.bzr --exclude-dir=.git'
else
  alias grep='grep --color --exclude=\*.svn\* --exclude=\*.pyc --exclude=\*.hg\* --exclude=\*.bzr\* --exclude=\*.git\*'
fi

#  ls and colors
# eval `dircolors -b`
# Long listing by default
alias l='ls -lh'
alias ll='l'
alias la='ls -lAh'
alias lll='ls -l | less'
alias llla='ls -lA | less'
# list only directories
alias lsd='\ls -d */'
# list only files
alias lsf="ls -rtF | grep -v '.*/'"
# list only source code (c, c++, Perl in my case)
alias lsp='ls *.c *.h *.cc *.pl *.pm *.py *.rb *.pp *.sh'
# Sort files by size
alias lss="ls -lrSF --si --color"

# do not delete / or prompt if deleting more than 3 files at a time
alias rm='rm -I --preserve-root'

# confirmation for mv/cp/ln
alias mv='mv -i'
alias cp='cp -i'
alias ln='ln -i'

# Parenting changing perms on /
alias chown='chown --preserve-root'
alias chmod='chmod --preserve-root'
alias chgrp='chgrp --preserve-root'

# directory navigation
alias ..='cd ..'
alias ...='cd ../..'
alias cd..='cd ..'

# df
if command -v "pydf" >/dev/null 2>&1; then
  alias df='pydf'
else
  alias df='df --human-readable'
fi

alias qfind='find . -iname'
alias f='find . -iname'

# Quick pagging and grepping
if [ $SHELL = '/bin/zsh' ]; then
  alias -g M='| most' G='| grep'
fi

if command -v "grc" >/dev/null 2>&1; then
  alias tail="grc tail"
fi

if command -v "highlight" >/dev/null 2>&1; then
  alias ccat="highlight -O ansi"
fi

# Use VIM!
#if command -v "nvim" >/dev/null 2>&1; then
#  alias vim='nvim'
#  alias vimdiff='nvim -d'
#fi
alias vi='vim'
alias svi='sudo vi'
alias svim='sudo vim'
alias vis='vim "+set si"'
alias edit='vim'

# emacs
alias emacs='emacs -nw'
alias ec='emacsclient -c --socket-name /tmp/emacs1000/server'

# rake
# setopt extended_glob causes troubles with rake tasks' arguments
alias rake='noglob rake'

# ssh
#alias ssh='TERM=xterm-256color ssh'
alias ssh='TERM=screen ssh'

# Suffix aliases to open files automatically
if [ $SHELL = '/bin/zsh' ]; then
  alias -s tex=vim
  alias -s txt=vim
  alias -s md=vim
  alias -s pdf=evince
  alias -s png=gpicview
  alias -s jpeg=gpicview
  alias -s jpg=gpicview
  alias -s html=$BROWSER
  alias -s htm=$BROWSER
fi

# network
alias my_ip='/sbin/ifconfig eth0 | grep "addr:" | sed -e "s/^.*addr://" |sed -e "s/ Bcast.*//" '
alias my_publicip='curl ipinfo.io'
alias my_ports='netstat -alpe --ip'
alias netstati="netstat --verbose --tcp --udp --programs --extend"
alias ports='netstat -tulanp'

# Stop after sending count ECHO_REQUEST packets #
alias ping='ping -c 5'
# Do not wait interval 1 second, go fast
alias fastping='ping -c 100 -s.2'

# get web server headers
alias header='curl -I'

# find out if remote server supports gzip / mod_deflate or not
alias headerc='curl -I --compress'

# multimedia
alias vol_up='pactl set-sink-volume alsa_output.pci-0000_00_1b.0.analog-stereo -- +10%'
alias vol_down='pactl set-sink-volume alsa_output.pci-0000_00_1b.0.analog-stereo -- -10%'
alias mp3burn-direct='mp3burn -c 80:00 -o " -v speed=48 dev=0,1,0 "'
alias webcam='xawtv -device /dev/v4l/video1'
alias playdvd='mplayer dvd://1 -dvd-device /dev/cdroms/cdrom0'
alias getdvd='dvdbackup -i /dev/acd0 -v 2 -M -o /mnt/videos'

alias links-fb='links -g -driver fb'

# fixlines: edit files in place to ensure Unix line-endings
fixlines () { perl -pi~ -e 's/\r\n?/\n/g' "$@" ; }

alias mountc='mount | column -t'

alias h='history'
#alias j='jobs -l'

alias path='echo -e ${PATH//:/\\n}'
alias now='date +"%T"'
alias nowtime=now
alias nowdate='date +"%d-%m-%Y"'

alias forest='ps -e --forest'
alias psc='ps xawf -eo pid,user,cgroup,args'

## pass options to free
alias meminfo='free -m -l -t'

## get top process eating memory
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'

## get top process eating cpu ##
alias pscpu='ps auxf | sort -nr -k 3'
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'

# to find memory hogs:
alias mem_hogs_top='top -l 1 -o rsize -n 10'
alias mem_hogs_ps='ps wwaxm -o pid,stat,vsize,rss,time,command | head -10'

# to find CPU hogs
alias cpu_hogs='ps wwaxr -o pid,stat,%cpu,time,command | head -10'

# continual 'top' listing (every 10 seconds) showing top 15 CPU consumers
alias topforever='top -l 0 -s 10 -o cpu -n 15'

## Get server cpu info
if command -v "lscpu" >/dev/null 2>&1; then
  alias cpuinfo='lscpu'
else
  ## older system use /proc/cpuinfo
  alias cpuinfo='less /proc/cpuinfo'
fi

alias kernelinfo='lynx -dump http://www.kernel.org/kdist/finger_banner'

# cvs
alias cvsstat='cvs status \!* | grep "Status:"'
alias cvswhat='cvs status \!* | grep "Status:" | grep -v "to-date"'

alias eclipse='eclipse -Xms1024M -Xmx4096M -XX:MaxPermSize=512M'

alias gi='hub'
alias git_update_all='for f (*); do (echo "\nUpdating $f"; cd $f ; git pull; cd ..); done'
alias git_push_all='for f (*); do (echo "\nUpdating $f"; cd $f ; git pull && git push; cd ..); done'

alias svn_update_all='for f (*); do (echo "\nUpdating $f"; cd $f ; svn up; cd ..); done'
alias svn_status_all='for f (*); do (echo "\nStatus of $f"; cd $f ; svn st; cd ..); done'

svn_add_all() {
  for f in `svn st| grep \? | awk '{print $2}'` ; do svn add $f ; done
}

#gg() {
#  outfile="/tmp/gg-${USER}"
#  q="$(echo $@ | sed 's/ /+/g')"
#  s_umask=`umask`
#  umask 077
#  lynx -dump -listonly -hiddenlinks=ignore http://google.fr/search\?q="${q}" | awk ' \
#  BEGIN { \
#    n = 0; \
#  } \
#  $1 ~ /[[:digit:]]+\./ && $2 !~ /http:\/\/([[:alpha:]][[:alnum:]]+\.google|[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+\/search)/ { \
#    print "alias g"n"=\"epiphany -n \\\""$2"\\\"\""; \
#    print "printf \"%4d. %s\\n\" "n" \""$2"\""; \
#    n++ \
#  } ' > "${outfile}"
#  s_umask=$s_umask
#  . "${outfile}"
#  rm "${outfile}"
#}

# Generates a tough password of a given length
function genpass() {
  if [ ! "$1" ]; then
    echo "Usage: $0 20"
    echo "For a random, 20-character password."
    return 1
  fi
  dd if=/dev/urandom count=1 2>/dev/null | tr -cd 'A-Za-z0-9!@#$%^&*()_+' | cut -c-$1
}

# Output total memory currently in use by you
memtotaller() {
  /bin/ps -u $(whoami) -o pid,rss,command | awk '{sum+=$2} END {print "Total " sum / 1024 " MB"}'
}

# Converts a PDF to a fold-able booklet sized PDF
# Print it double-sided and fold in the middle
bookletize () {
  if which pdfinfo && which pdflatex; then
    pagecount=$(pdfinfo $1 | awk '/^Pages/{print $2+3 - ($2+3)%4;}')

    # create single fold booklet form in the working directory
    pdflatex -interaction=batchmode \
      '\documentclass{book}\
      \usepackage{pdfpages}\
      \begin{document}\
      \includepdf[pages=-,signature='$pagecount',landscape]{'$1'}\
      \end{document}' 2>&1 >/dev/null
  fi
}

# Merges, or joins multiple PDF files into "joined.pdf"
joinpdf () {
  gs -q -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile=joined.pdf "$@"
}

# 256-colors test
256test() {
  echo -e "\e[38;5;196mred\e[38;5;46mgreen\e[38;5;21mblue\e[0m"
}

# Miscellaneous Functions:
# ..(), ...() for quickly changing $CWD
# http://www.shell-fu.org/lister.php?id=769
# Go up n levels:
# .. 3
# function .. (){
#   local arg=${1:-1};
#   local dir=""
#   while [ $arg -gt 0 ]; do
#     dir="../$dir"
#     arg=$(($arg - 1));
#   done
#   cd $dir >&/dev/null
# }

# Go up to a named dir
# ... usr
# function ... () {
#   if [ -z "$1" ]; then
#     return
#   fi
#   local maxlvl=16
#   local dir=$1
#   while [ $maxlvl -gt 0 ]; do
#     dir="../$dir"
#     maxlvl=$(($maxlvl - 1));
#     if [ -d "$dir" ]; then
#       cd $dir >&/dev/null
#     fi
#   done
# }

# Dictionary lookup
# Many more options, see:
# http://linuxcommando.blogspot.com/2007/10/dictionary-lookup-via-command-line.html
dict() {
  curl "dict://dict.org/d:$1:*"
}

spell() {
  echo $1 | aspell -a
}

alias tips.txt='vim ~/tips.txt'

# Grep ~/tips.txt
tips() {
  grep "$@" ~/tips.txt
}

alias vimprobable2="vimprobable2 -e \"\$(tabbed -d)\""
alias vimbtabbed='tabbed -c vimb -e'

alias http-server-python2='python -m SimpleHTTPServer 8000'
alias http-server-python3='python -m http.server 8000'

alias big_syncthing='ssh -N -L 8081:localhost:45028 big.bapt.name'
alias htpc_syncthing='ssh -N -L 8082:localhost:47101 htpc'

# mutt

alias muttperso='mutt -f "=Perso/INBOX"'
alias mutt='mutt -f "=Gmail/INBOX"'

#alias git="git-achievements"

if command -v "ssh-multi" >/dev/null 2>&1; then
  alias tmux-pcdr-all='ssh-multi clrpcsv-ginseng-cas-vdev01.in2p3.fr clrpcsv-ginseng-gw-devel01.in2p3.fr ginseng.unice.fr pcdr-amga.gnubila.fr pcdr-gw-ccpm1.gnubila.fr pcdr-gw-devel1.gnubila.fr pcdr-gw-opbg1.gnubila.fr pcdr-querynode.gnubila.fr'
  alias tmux-fbf-all='ssh-multi srv{3,4,5,6,7,8,9,10,11,12,13,14,15,16}.fatebenefratelli.it ns{1,2}.fatebenefratelli.it'
  alias tmux-fbf-servers='ssh-multi srv{3,4,5,6,}.fatebenefratelli.it ns{1,2}.fatebenefratelli.it'
  alias tmux-fbf-wn='ssh-multi srv{7,8,9,10,11,12,13,14,15,16}.fatebenefratelli.it'
  alias tmux-fbf-xen='ssh-multi xenserver-fbf-dell-{1,2,3,4,5,6,7,8,9,10,11,12,13}'
  alias tmux-ginseng-gw='ssh-multi ginseng-gw-{abidec,ardoc,sipath}.gnubila.fr ginseng-{amga,idp,portal}.gnubila.fr sipath'
  alias tmux-hug-all='ssh-multi ng-hug-server{0,3,4,5,6}.neuro.hcuge.ch ng-hug-wn{0,1,2,3,4,5,6}.neuro.hcuge.ch'
  alias tmux-hug-servers='ssh-multi ng-hug-server{0,3,4,5,6}.neuro.hcuge.ch'
  alias tmux-hug-wn='ssh-multi ng-hug-wn{0,1,2,3,4,5,6}.neuro.hcuge.ch'
  alias tmux-hug-xen='ssh-multi xenserver-hug-0{1,2,3,4,5,6,7,8,9}.gnubila.fr'
  alias tmux-ki-all='ssh-multi ng-ki-server{4,5,6,7}.ki.se ng-ki-wn{0,1,2,3,4,5,6,7,8,9}.local'
  alias tmux-ki-servers='ssh-multi ng-ki-server{4,5,6,7}.ki.se'
  alias tmux-ki-wn='ssh-multi ng-ki-wn{0,1,2,3,4,5,6,7,8,9}.local'
  alias tmux-roma-xen='ssh-multi xenserver-roma-0{0,1,2,3,4,5,6,7,8}.gnubila.fr'
  alias tmux-taormina-xen='ssh-multi xenserver-taormina-0{0,1,2,3,4,5,6,7,8}.gnubila.fr'
  alias tmux-gnubila-all='ssh-multi ng-maat-server{3,5,6,8,9}.gnubila.fr {bdii,bdii-site,idp,dev-idp,lfc,myproxy,nagios,pipeline,ra,sentinelle1,slipstream,voms,wms}.gnubila.fr'
  alias tmux-gnubila-site='ssh-multi ng-maat-server{3,5,6,8,9}.gnubila.fr bdii-site.gnubila.fr'
  alias tmux-gnubila-central='ssh-multi {bdii,idp,dev-idp,lfc,myproxy,nagios,pipeline,ra,slipstream,voms,wms}.gnubila.fr'
  alias tmux-gw='ssh-multi ng-maat-devel1.gnubila.fr pcdr-gw-devel1.gnubila.fr pcdr-gw-opbg1.gnubila.fr srv4.fatebenefratelli.it ng-hug-server4.neuro.hcuge.ch mdp-dhzb1.gnubila.fr mdp-igg1.gnubila.fr pcdr-gw-ccpm1.gnubila.fr'
  alias tmux-bapt.name='ssh-multi {misc,dns,big}.bapt.name'
fi

# Attach or create tmux session named the same as current directory.
tat() {
  tmux new-session -As "$(basename "$PWD" | tr . -)"
}

if command -v "herbstclient" >/dev/null 2>&1; then
 if ! command -v "hc" >/dev/null 2>&1; then
    hc() {
      herbstclient "$@"
    }
  fi
fi

venv() {
  local activate=~/.python/$1/bin/activate
  if [ -e "$activate" ] ; then
    source "$activate"
  else
    echo "Error: Not found: $activate"
  fi
}
venv27() { venv 27 ; }

man() {
  env LESS_TERMCAP_mb=$'\E[01;31m' \
    LESS_TERMCAP_md=$'\E[01;38;5;74m' \
    LESS_TERMCAP_me=$'\E[0m' \
    LESS_TERMCAP_se=$'\E[0m' \
    LESS_TERMCAP_so=$'\E[38;5;246m' \
    LESS_TERMCAP_ue=$'\E[0m' \
    LESS_TERMCAP_us=$'\E[04;38;5;146m' \
    man "$@"
}

if command -v "thefuck" >/dev/null 2>&1; then
  alias fuck='eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R'
fi

# vim:set ft=sh ts=2 sw=2 et:
