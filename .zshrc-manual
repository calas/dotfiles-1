# ZSH configuration for interactive shells

# Source system profile
source /etc/profile

[ -f ~/.zshenv ] && source ~/.zshenv

export SHELL=$(which zsh)

autoload -U colors && colors
autoload -U promptinit

# Turn on color output
if [ $(uname) = FreeBSD ]; then
  export CLICOLOR=true
fi

# bindkeys
# Find keycode:
# execute cat, press the key and crtl + c
# Show configuration: bindkey -l
bindkey -v
bindkey -M vicmd "^R" redo
bindkey -M vicmd "u" undo
bindkey -M vicmd "k" history-beginning-search-backward
bindkey -M vicmd "j" history-beginning-search-forward
bindkey -M viins '^r' history-incremental-search-backward # crtl-r
bindkey -M vicmd '^r' history-incremental-search-backward # crtl-r

bindkey "^A"    beginning-of-line       # Home
bindkey "^E"    end-of-line             # End
bindkey "^D"    delete-char             # Del
bindkey "[3~" delete-char             # Del
bindkey "[2~" overwrite-mode          # Insert
bindkey "[5~" history-search-backward # PgUp
bindkey "[6~" history-search-forward  # PgDn
#bindkey "^?"    backward-delete-char    # Backspace
bindkey "^?" backward-delete-char

bindkey "[1~" beginning-of-line # Home (console)
bindkey "[4~" end-of-line # End (console)
bindkey "OH" beginning-of-line # Home (gnome-terminal)
bindkey "OF" end-of-line # End (gnome-terminal)
bindkey "[H" beginning-of-line # Home (konsole+xterm)
bindkey "[F" end-of-line # End (konsole+xterm)
bindkey "[A" history-beginning-search-backward
bindkey "[B" history-beginning-search-forward
bindkey "[3;5~" delete-word # Ctrl w
bindkey "d" kill-word # Alt d
bindkey "[5C" forward-word # Alt ->
bindkey "[1;3C" forward-word # Alt ->
bindkey "^[[C" forward-word
bindkey "[5D" backward-word # Alt <-
bindkey "^[[D" backward-word
bindkey "[1;3D" backward-word # Alt <-
bindkey "[3~" delete-char # Suppr
bindkey "[2~" overwrite-mode # Inser
bindkey "[F" end-of-line
bindkey "[H" beginning-of-line
# bindkey m menu-select
bindkey "h" run-help # esc-h
#bindkey "^M" run-help
# Keycode for up/down in application mode on ubuntu
# http://www.f30.me/2012/10/oh-my-zsh-key-bindings-on-ubuntu-12-10/
#bindkey "${terminfo[kcuu1]}" up-line-or-search
#bindkey "${terminfo[kcud1]}" down-line-or-search

# urxvt
bindkey "[5" up-line-or-history
bindkey "[6" down-line-or-history
bindkey "[7~" beginning-of-line
bindkey "[8~" end-of-line

# Console linux, dans un screen ou un rxvt
if [ "$TERM" = "linux" -o "$TERM" = "screen" -o "$TERM" = "rxvt" ]
then
  bindkey "[1~" beginning-of-line       # Home
  bindkey "[4~" end-of-line             # End
fi

# xterm
if [ "$TERM" = "xterm" ]
then
  bindkey "[H"  beginning-of-line       # Home
  bindkey "[F"  end-of-line             # End
fi

# Gnome terminal
if [ "$COLORTERM" = "gnome-terminal" ]
then
  bindkey "OH"  beginning-of-line       # Home
  bindkey "OF"  end-of-line             # End
  bindkey "[1;3C" forward-word # Alt ->
  bindkey "[1;3D" backward-word # Alt <-
  bindkey "[1;3A" history-search-backward
fi

# Push a command onto a stack allowing you to run another command first
bindkey '^J' push-line

# Allows editing the command line with an external editor
autoload edit-command-line
zle -N edit-command-line
# Press Esc=v to edit command line
bindkey -M vicmd "v" edit-command-line

# Alt-S inserts sudo at the starts of the line
insert_sudo () { zle beginning-of-line; zle -U 'sudo ' }
zle -N insert-sudo insert_sudo
bindkey 's' insert-sudo

typeset -Ag abbreviations
abbreviations=(
  'Ia'    '| awk'
  'Ig'    '| grep'
  'Ip'    "| $PAGER"
  'Ih'    '| head'
  'It'    '| tail'
  'Is'    '| sort'
  'Iw'    '| wc'
)

# environment settings
# zshoptions

REPORTTIME=60       # Report time statistics for progs that take more than a minute to run
WATCH=not-me        # Report any login/logout of other users
WATCHFMT='%n %a %l from %m at %T.'
LOGCHECK=10

# No beeps
unsetopt beep
unsetopt hist_beep
unsetopt list_beep
# force write when using > and file already exists
setopt clobber
# Ctrl+D to logout
unsetopt ignore_eof
# Display return code if different from 0
setopt print_exit_value
# Ask confirmation for 'rm *'
unsetopt rm_star_silent
# Try to correct the spelling of commands
setopt correct
# Note the location of each command
setopt hash_cmds
# Whenever a command name is hashed, hash the directory containing it
setopt hash_dirs
# Si on utilise des jokers dans une liste d'arguments, retire les jokers
# qui ne correspondent √† rien au lieu de donner une erreur
setopt nullglob
# Assume  '#', '~' and '^' as part of patterns for filename generation
setopt extended_glob
setopt numeric_globsort
setopt bad_pattern # print out an error if a pattern or glob is badly formed
# http://www.zsh.org/mla/workers/1996/msg01463.html
setopt magic_equal_subst
setopt glob_assign

# Do not perform filename completion and expansion when using unquoted =
unsetopt equals

# Automatically list choices on an ambiguous completion
setopt auto_list
# Compl√©tion
#unsetopt list_ambiguous
# Add a slash after a completed directory name
setopt auto_param_slash
setopt auto_param_keys
# Quand le dernier caract√®re d'une compl√©tion est '/' et que l'on
# tape 'espace' apr√®s, le '/' est effa√ß√©
setopt auto_remove_slash
# No completion on hidden files/dirs
unsetopt glob_dots
setopt complete_aliases
#allow tab completion in the middle of a word
setopt complete_in_word
# Autoload, define the user widget and bind incremental-... on TAB.
autoload incremental-complete-word

# Traite les liens symboliques comme il faut
setopt chase_links

# mail checking
MAILCHECK=1
MAIL=$HOME/Mail/INBOX
mailpath=(
"$HOME/Mail/INBOX?You have new mail in INBOX"
)

# When using ! to recall a command from history write it before executing it
setopt hist_verify
# Avoid duplicating older command in the history
setopt hist_ignore_dups
# Write history in append mode
setopt append_history
# Perform 'cd' on a directory name if no homonymous command is found
setopt auto_cd
setopt cdable_vars # if cd would fail, because the arg is not a dir, try to expand the argument as if it was called the ~expression way
# L'ex√©cution de "cd" met le r√©pertoire d'o√π l'on vient sur la pile
setopt auto_pushd
# Ignore les doublons dans la pile
setopt pushd_ignore_dups
# N'affiche pas la pile apr√®s un "pushd" ou "popd"
setopt pushd_silent
# "pushd" sans argument = "pushd $HOME"
setopt pushd_to_home

setopt bg_nice # run background jobs at lower priority
# N'envoie pas de "HUP" aux jobs qui tourent quand le shell se ferme
unsetopt hup
setopt auto_resume # resume background task instead of starting new ones
setopt check_jobs # report status of bg-jobs if exiting a shell with job control enabled

# Command history parameters #export HISTORY=1000
 HISTFILE=$HOME/.zshistory
HISTFILESIZE=65536
HISTSIZE=4096
SAVEHIST=$HISTSIZE
# shared history
setopt share_history hist_find_no_dups hist_ignore_all_dups hist_ignore_space

# completions

#zstyle ':completion:*' use-compctl false
# autorise un caract√®re sur trois √† √™tre une erreur de typo
#zstyle -e ':completion:*:approximate:*' max-errors par 'reply=( $(( ($#PREFIX+$#SUFFIX)/3 )) numeric )'
# formatage et d√©coration
zstyle ':completion::complete:*' use-cache 1
zstyle ':completion:*' verbose yes
zstyle ':completion:*:descriptions' format '%B%d%b'
zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:warnings' format 'No matches for: %d'
zstyle ':completion:*:corrections' format '%B%d (errors: %e)%b'
# les extensions de fichier √† ne pas proposer (sauf pour rm)
zstyle ':completion:*:*:(^rm):*:*files' ignored-patterns par '*?.o' '*?.c~' '*?.old' '*?.pro'
zstyle ':completion:*' format '[32m-=> [01m%d[0m'
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _complete _correct _approximate
# ins√®re toutes les possibilit√©s pour le completer expand
#zstyle ':completion:*:expand:*' tag-order all-expansions
zstyle ':completion:*' group-name ''
zstyle ':completion:*' insert-unambiguous true
case $(uname) in
  Linux)
    eval "`dircolors -b`"
    zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
    ;;
  *BSD)
    # Use FreeBSD default colors...
    zstyle ':completion:*' list-colors 'di=34:ln=35:ex=31:cd=36;43:so=32'
    ;;
esac
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=** r:|=**'
zstyle ':completion:*' max-errors 1
zstyle ':completion:*' menu select=5
zstyle ':completion:*' original true
zstyle ':completion:*' squeeze-slashes true
zstyle -e ':completion:*:(ssh|sssh|scp|sshfs|ping|telnet|ftp|rsync):*' hosts 'reply=(${=${${(M)${(f)"$(<~/.ssh/config)"}:#Host*}#Host }:#*\**})'
zstyle ':completion:*:processes' list-colors '=(#b)(?????)(#B)?????????????????????????????????([^ ]#/)#(#b)([^ /]#)*=00=01;31=01;33'

setopt LIST_TYPES

# e.g., zmv *.JPEG *.jpg
autoload -U zmv
alias zmv='noglob zmv'

autoload -U compinit
#compinit -i ${HOME}/.zcompdump

# name directories
hash -d repos=~/repos
hash -d Desktop=~/Desktop
hash -d Downloads=~/Downloads
hash -d DL=~/Downloads
hash -d Documents=~/Documents
hash -d Docs=~/Documents
hash -d dev=~/dev

[ -x /usr/games/fortune ] && /usr/games/fortune /usr/local/share/games/fortune/bofh
#[ -x /usr/bin/fortune ] && fortune bofh-excuses dune hitchhiker heretics-of-dune house-atreides house-harkonnen
[ -x /usr/bin/fortune ] && fortune
echo
[ -x /usr/games/fortune ] && /usr/games/fortune freebsd-tips

function mainClasses {
  if [ -d ./src ] ; then
    find ./src/main -type f -iname "*.java" \
      | sed 's?.*src/main/[^/]*/\(.*\)\..*?-DmainClass=\1?' | sed 's+/+.+g'
  fi
}

function mainTests {
  if [ -d ./src ] ; then
    find ./src/test -type f -iname "*test*.java"  \
      | sed 's?.*src/test/[^/]*/\(.*\)\..*?-Dtest=\1?' | sed 's+/+.+g'
  fi
}

function listMavenCompletions {
  reply=(archetype:generate compile clean package install test
      test-compile deploy release scala:run scala:cc
      -Dmaven.test.skip=true
      `mainClasses`
      `mainTests`
      -q -o
      );
}

compctl -K listMavenCompletions mvn%

# Completion options
[ -f /etc/zsh/git-flow-completion.zsh ] && source /etc/zsh/git-flow-completion.zsh
[ -f /usr/share/git-flow/git-flow-completion.zsh ] && source /usr/share/git-flow/git-flow-completion.zsh

# Use promptline.vim
[ -f ~/.shell_prompt.sh ] && source ~/.shell_prompt.sh

# EOF

# vim:set ft=zsh ts=2 sw=2 et:
