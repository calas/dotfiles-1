" cvim configuration

" Use local configuration
let configpath = "/home/baptiste/.cvimrc"
set localconfig
let homedirectory = "/home/baptiste"

" Hint configuration
let hintcharacters = "asdfghjkl;"
set nodimhintcharacters

" Hide cursor when scrolling
set autohidecursor

" Command bar location
let barposition = "bottom"

" Disable smooth page scrolling
set nosmoothscroll

" Show a list of command when pressing :
set completeonopen

" Open defaut chrome://newtab page
set defaultnewtabpage

" Search engines management
let searchalias i = "imdb"

let searchengine nar = "http://newalbumreleases.net/?s=%s"
let searchalias n = "nar"

let searchengine drive = "https://drive.google.com/drive/search?q=%s"
let searchalias d = "drive"

let searchengine github = "https://github.com/search?q=%s&ref=opensearch"
let searchalias g = "github"

let searchengine qwant = "https://www.qwant.com/?q=%s&client=opensearch"
let searchalias q = "qwant"

let searchengine webopedia = "https://www.webopedia.com/sgsearch/results?q=%s"
let searchalias w = "webopedia"

let searchengine ixquick = "https://www.ixquick.com/do/dsearch?query=%s&cat=web&pl=opensearch&language=english"
let searchengine i = "ixquick"

" This will do the same thing as above, except typing ':tabnew withbase' into to command bar
" without any search parameters will open https://www.dogpile.com
" let searchengine dogpile = "https://www.dogpile.com/search/web?q=%s"
let searchengine dogpile = [ "https://www.dogpile.com", "https://www.dogpile.com/search/web?q=%s" ]
let searchalias dp = "dogpile"

" List of completion engines
let completionengines = [  "qwant",  "google",  "drive",  "wikipedia",  "imdb", "duckduckgo",  "nar",  "dogpile",  "github",  "ixquick" ]

let defaultengine = "dogpile"

" cVim disabled on sites
let blacklists = [  "https://mail.google.com/*",  "*://mail.google.com/*",  "@https://mail.google.com/mail/*",  "https://connect.cesnet.cz" ]

" TODO Add bookmark
" Default: <C-b>
unmap a
map a createBookmark

" Buffer management
unmap b
map b :buffer<Space>

" TODO Opening previously opened tab
" map <C-^>

" Opening text area outside
let vimcommand = 'urxvt -e vim'
imap <C-o> editWithVim

set cncpcompletion

" Imported/commented configuration
" set noautofocus
" set nohud
" set typelinkhints
" let mapleader = ','
" let zoomfactor = 0.05
" let scrollduration = 250
" let searchlimit = 25
" map af createActiveTabbedHint
" map $ lastTab
" map 0 firstTab
" map <Space> l
" map <S-Space> h
" map gS :viewsource&<CR>
" map xx closeTab
" map qq xx
" map Q closeTab
" map gs fullImageHint
" map gq :restore<Space>
" map a<Space> z<Enter>
" map <C-e> z<Enter>
" map <C-k> nextTab
" map <C-j> previousTab
" map cn :execute nzz<CR>
" map cN :execute Nzz<CR>
" map <C-d> :file ~/
" map m* setMark
" map <C-s> openLastHint
" map <C-g> :set smoothscroll!<CR>
" map <C-h> :nohl<CR>
" map cc :set hud!<CR>
" map aa :tabopen g<Space>
" map ga :settings<CR>
" map g0 scrollToLeft
" map I yankHighlight
" map g$ scrollToRight
" imap <C-y> selectAll
" imap <C-a> <C-i>
" imap <C-l> forwardWord
" imap <C-h> backwardWord
" map <BS> <Nop>
" map <Leader>s :source<CR>
" map <Leader>n :set numerichints!<CR>
" map ci :call getIP<CR>
" map ? openLinkSearchBar
" site '*://*.netflix.com/watch*' {
"   unmap <Space>
"   unmap f
" }
